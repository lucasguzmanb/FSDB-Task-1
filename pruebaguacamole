desc NOMBRE de la file para ver las columnas


//Para loans debería tener(loan_id, start_date, return_date, user_id, copy_id, returned, real_return_date,comment_date, body, likes, dislikes)

SELECT signature, date_time, return, user_id FROM  fsdb.loans
SELECT id FROM copies;



//Para Sanctions debería tener(id, user_id, sanction_days, start_date, end_date)
SELECT id FROM users// selecciono el id de users
SELECT id FROM loans //seleccionar loan_id
//Con esto selecciono las que tienen sanction
SELECT date_time, return, user_id 
FROM fsdb.loans 
WHERE RETURN IS NOT NULL
AND TO_DATE(RETURN, 'DD/MM/YYYY HH24:MI:SS') - TO_DATE(DATE_TIME, 'DD/MM/YYYY HH24:MI:SS') > 14; 

//Podría ser así
SELECT 
    u.id AS user_id,
    l.signature AS loan_id,
    CEIL(TO_DATE(l.return, 'DD/MM/YYYY HH24:MI:SS') - TO_DATE(l.date_time, 'DD/MM/YYYY HH24:MI:SS') - 14) AS weeks,  
    TO_DATE(l.return, 'DD/MM/YYYY HH24:MI:SS') AS start_date,  
    TO_DATE(l.return, 'DD/MM/YYYY HH24:MI:SS') + (CEIL(TO_DATE(l.return, 'DD/MM/YYYY HH24:MI:SS') - TO_DATE(l.date_time, 'DD/MM/YYYY HH24:MI:SS') - 14) * 7) AS end_date  
FROM fsdb.loans l  
JOIN users u ON u.passport = l.passport  -- Match users by passport
WHERE l.return IS NOT NULL  
AND TO_DATE(l.return, 'DD/MM/YYYY HH24:MI:SS') - TO_DATE(l.date_time, 'DD/MM/YYYY HH24:MI:SS') > 14;  



//Para users debería tener(user_id, name, surname1, surname2, passport, birthdate, town, municipality_id, address, email, telephone, user_type)

 SELECT user_id, name, surname1, surname2, passport, birthdate, town, address, email, phone FROM fsdb.loans

//para user_type tengo q poner 1 si es biblioteca y 0 si no//

INSERT INTO users (id, name, surname1, surname2, passport, birthdate, town, municipality_id, address, email, telephone, is_library)
INSERT INTO users (
    id, 
    name, 
    surname1, 
    surname2, 
    passport, 
    birthdate, 
    municipality_id, 
    address, 
    email, 
    telephone, 
    is_library
)
SELECT DISTINCT TRIM(user_id), 
       name, 
       surname1, 
       surname2, 
       passport, 
       TO_DATE(birthdate, 'DD-MM-YYYY'), 
       town, 
       address, 
       email, 
       phone,
       CASE 
           WHEN UPPER(name) LIKE 'BIBLIOTECA%' THEN 1 
           ELSE 0 
       END
FROM fsdb.loans  
WHERE signature IS NOT NULL
AND name IS NOT NULL
AND surname1 IS NOT NULL
AND passport IS NOT NULL
AND birthdate IS NOT NULL
AND town IS NOT NULL
AND address IS NOT NULL
AND phone IS NOT NULL
AND TRIM(user_id) NOT IN (SELECT TRIM(id) FROM users);



//Para publications debería tener( ISBN, book_id, main_language, other_languages, edition, publisher, lenght, series, legal_deposit, publication_place, dimensions, physical_chars, additional_material, additional_notes, national_id, URL)
SELECT ISBN, main_language, other_languages, edition, publisher, extension, series, pub_place, dimensions, physical_features, attached_materials, notes, national_lib_id, URL FROM  fsdb.acervus
SELECT id FROM books

